name: Run test suite

on: [pull_request]

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install project dependencies
        run: yarn
      - name: Generate .env file
        run: envsubst < ".env.dist" > ".env"
        env:
          GOOGLE_WEB_CLIENT_ID: ${{ secrets.GOOGLE_WEB_CLIENT_ID }}
      - name: Jest test
        run: yarn test
#       TODO: Think when we need to build the apk
#         Disable cause it takes to long time for each pull request,
#         And we don't want to waste free minutes build time
#      - name: Build Android Release
#        run: |
#          cd android && chmod +x ./gradlew && ./gradlew assembleRelease
#      - name: Upload Artifact
#        uses: actions/upload-artifact@v1
#        with:
#          name: ${{ runner.os }}_app-release.apk
#          path: android/app/build/outputs/apk/release/

