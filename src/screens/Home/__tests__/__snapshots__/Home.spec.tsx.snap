// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`[Page] Home renders correctly 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "bottom": 0,
      "justifyContent": "center",
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
  testID="Loader"
>
  <ActivityIndicator
    animating={true}
    color="#0000ff"
    hidesWhenStopped={true}
    size="large"
  />
</View>
`;

exports[`[Page] Home renders correctly 2`] = `
<View
  style={
    Array [
      Object {
        "flex": 1,
      },
      Object {
        "backgroundColor": "#f6f6f6",
      },
    ]
  }
>
  <RCTScrollView
    ListEmptyComponent={<FFCardsListEmpty />}
    data={Array []}
    disableVirtualization={false}
    extraData={750}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReached={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onRefresh={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshControl={
      <RefreshControlMock
        onRefresh={[Function]}
        refreshing={false}
      />
    }
    refreshing={false}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    style={
      Array [
        Object {
          "paddingTop": 10,
        },
        Object {},
      ]
    }
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <RCTRefreshControl />
    <View>
      <Text
        style={
          Object {
            "marginTop": "50%",
            "textAlign": "center",
            "width": "100%",
          }
        }
      >
        No result
      </Text>
    </View>
  </RCTScrollView>
</View>
`;

exports[`[Page] Home should show a backend error message 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "bottom": 0,
      "justifyContent": "center",
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
  testID="Loader"
>
  <ActivityIndicator
    animating={true}
    color="#0000ff"
    hidesWhenStopped={true}
    size="large"
  />
</View>
`;

exports[`[Page] Home should show a backend error message 2`] = `
<Text>
  "401 Unauthorized"
</Text>
`;

exports[`[Page] Home should show error 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "bottom": 0,
      "justifyContent": "center",
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
  testID="Loader"
>
  <ActivityIndicator
    animating={true}
    color="#0000ff"
    hidesWhenStopped={true}
    size="large"
  />
</View>
`;

exports[`[Page] Home should show error 2`] = `null`;
