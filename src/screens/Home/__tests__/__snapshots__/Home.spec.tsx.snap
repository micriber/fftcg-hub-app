// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`[Page] Home renders correctly 1`] = `
Array [
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#878683",
        "flexDirection": "row",
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingTop": 10,
        "width": "100%",
      }
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": undefined,
            "fontSize": 20,
          },
          undefined,
          Object {
            "fontFamily": "anticon",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          Object {},
        ]
      }
    >
      
    </Text>
    <RCTSwitch
      accessibilityRole="switch"
      onChange={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "height": 31,
          "width": 51,
        }
      }
      testID="SwitcherState-0"
      value={false}
    />
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": undefined,
            "fontSize": 22,
          },
          undefined,
          Object {
            "fontFamily": "anticon",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          Object {},
        ]
      }
    >
      
    </Text>
  </View>,
  <View
    style={
      Object {
        "alignItems": "center",
        "bottom": 0,
        "justifyContent": "center",
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
    testID="Loader"
  >
    <ActivityIndicator
      animating={true}
      color="#0000ff"
      hidesWhenStopped={true}
      size="large"
    />
  </View>,
  <View
    style={
      Object {
        "alignItems": "flex-end",
        "bottom": 20,
        "height": 75,
        "justifyContent": "center",
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#00BCD4",
          "borderColor": "#fff",
          "borderRadius": 50,
          "borderWidth": 1,
          "height": 60,
          "justifyContent": "center",
          "marginRight": 20,
          "opacity": 1,
          "width": 60,
        }
      }
      testID="BottomRightButton"
    >
      <Text
        allowFontScaling={false}
        style={
          Array [
            Object {
              "color": undefined,
              "fontSize": 20,
            },
            undefined,
            Object {
              "fontFamily": "anticon",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
    </View>
  </View>,
]
`;

exports[`[Page] Home renders correctly 2`] = `
Array [
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#878683",
        "flexDirection": "row",
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingTop": 10,
        "width": "100%",
      }
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": undefined,
            "fontSize": 20,
          },
          undefined,
          Object {
            "fontFamily": "anticon",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          Object {},
        ]
      }
    >
      
    </Text>
    <RCTSwitch
      accessibilityRole="switch"
      onChange={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "height": 31,
          "width": 51,
        }
      }
      testID="SwitcherState-0"
      value={false}
    />
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": undefined,
            "fontSize": 22,
          },
          undefined,
          Object {
            "fontFamily": "anticon",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          Object {},
        ]
      }
    >
      
    </Text>
  </View>,
  <View
    style={
      Array [
        Object {
          "flexDirection": "column",
          "flexGrow": 1,
          "justifyContent": "flex-start",
          "width": "100%",
        },
      ]
    }
  >
    <RCTScrollView
      ListEmptyComponent={
        <Text
          style={
            Object {
              "marginTop": "50%",
              "textAlign": "center",
              "width": "100%",
            }
          }
        >
          No result
        </Text>
      }
      data={Array []}
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={2}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      onContentSizeChange={[Function]}
      onEndReached={[Function]}
      onEndReachedThreshold={1}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onRefresh={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      refreshControl={
        <RefreshControlMock
          onRefresh={[Function]}
          refreshing={false}
        />
      }
      refreshing={false}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <RCTRefreshControl />
      <View>
        <Text
          onLayout={[Function]}
          style={
            Object {
              "marginTop": "50%",
              "textAlign": "center",
              "width": "100%",
            }
          }
        >
          No result
        </Text>
      </View>
    </RCTScrollView>
  </View>,
  <View
    style={
      Object {
        "alignItems": "flex-end",
        "bottom": 20,
        "height": 75,
        "justifyContent": "center",
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#00BCD4",
          "borderColor": "#fff",
          "borderRadius": 50,
          "borderWidth": 1,
          "height": 60,
          "justifyContent": "center",
          "marginRight": 20,
          "opacity": 1,
          "width": 60,
        }
      }
      testID="BottomRightButton"
    >
      <Text
        allowFontScaling={false}
        style={
          Array [
            Object {
              "color": undefined,
              "fontSize": 20,
            },
            undefined,
            Object {
              "fontFamily": "anticon",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
    </View>
  </View>,
]
`;

exports[`[Page] Home should show a backend error message 1`] = `
Array [
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#878683",
        "flexDirection": "row",
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingTop": 10,
        "width": "100%",
      }
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": undefined,
            "fontSize": 20,
          },
          undefined,
          Object {
            "fontFamily": "anticon",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          Object {},
        ]
      }
    >
      
    </Text>
    <RCTSwitch
      accessibilityRole="switch"
      onChange={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "height": 31,
          "width": 51,
        }
      }
      testID="SwitcherState-0"
      value={false}
    />
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": undefined,
            "fontSize": 22,
          },
          undefined,
          Object {
            "fontFamily": "anticon",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          Object {},
        ]
      }
    >
      
    </Text>
  </View>,
  <View
    style={
      Object {
        "alignItems": "center",
        "bottom": 0,
        "justifyContent": "center",
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
    testID="Loader"
  >
    <ActivityIndicator
      animating={true}
      color="#0000ff"
      hidesWhenStopped={true}
      size="large"
    />
  </View>,
  <View
    style={
      Object {
        "alignItems": "flex-end",
        "bottom": 20,
        "height": 75,
        "justifyContent": "center",
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#00BCD4",
          "borderColor": "#fff",
          "borderRadius": 50,
          "borderWidth": 1,
          "height": 60,
          "justifyContent": "center",
          "marginRight": 20,
          "opacity": 1,
          "width": 60,
        }
      }
      testID="BottomRightButton"
    >
      <Text
        allowFontScaling={false}
        style={
          Array [
            Object {
              "color": undefined,
              "fontSize": 20,
            },
            undefined,
            Object {
              "fontFamily": "anticon",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
    </View>
  </View>,
]
`;

exports[`[Page] Home should show a backend error message 2`] = `
Array [
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#878683",
        "flexDirection": "row",
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingTop": 10,
        "width": "100%",
      }
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": undefined,
            "fontSize": 20,
          },
          undefined,
          Object {
            "fontFamily": "anticon",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          Object {},
        ]
      }
    >
      
    </Text>
    <RCTSwitch
      accessibilityRole="switch"
      onChange={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "height": 31,
          "width": 51,
        }
      }
      testID="SwitcherState-0"
      value={false}
    />
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": undefined,
            "fontSize": 22,
          },
          undefined,
          Object {
            "fontFamily": "anticon",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          Object {},
        ]
      }
    >
      
    </Text>
  </View>,
  <Text>
    "401 Unauthorized"
  </Text>,
  <View
    style={
      Object {
        "alignItems": "flex-end",
        "bottom": 20,
        "height": 75,
        "justifyContent": "center",
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#00BCD4",
          "borderColor": "#fff",
          "borderRadius": 50,
          "borderWidth": 1,
          "height": 60,
          "justifyContent": "center",
          "marginRight": 20,
          "opacity": 1,
          "width": 60,
        }
      }
      testID="BottomRightButton"
    >
      <Text
        allowFontScaling={false}
        style={
          Array [
            Object {
              "color": undefined,
              "fontSize": 20,
            },
            undefined,
            Object {
              "fontFamily": "anticon",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
    </View>
  </View>,
]
`;

exports[`[Page] Home should show error 1`] = `
Array [
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#878683",
        "flexDirection": "row",
        "justifyContent": "center",
        "paddingBottom": 10,
        "paddingTop": 10,
        "width": "100%",
      }
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": undefined,
            "fontSize": 20,
          },
          undefined,
          Object {
            "fontFamily": "anticon",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          Object {},
        ]
      }
    >
      
    </Text>
    <RCTSwitch
      accessibilityRole="switch"
      onChange={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "height": 31,
          "width": 51,
        }
      }
      testID="SwitcherState-0"
      value={false}
    />
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": undefined,
            "fontSize": 22,
          },
          undefined,
          Object {
            "fontFamily": "anticon",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          Object {},
        ]
      }
    >
      
    </Text>
  </View>,
  <View
    style={
      Object {
        "alignItems": "center",
        "bottom": 0,
        "justifyContent": "center",
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
    testID="Loader"
  >
    <ActivityIndicator
      animating={true}
      color="#0000ff"
      hidesWhenStopped={true}
      size="large"
    />
  </View>,
  <View
    style={
      Object {
        "alignItems": "flex-end",
        "bottom": 20,
        "height": 75,
        "justifyContent": "center",
        "position": "absolute",
        "width": "100%",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#00BCD4",
          "borderColor": "#fff",
          "borderRadius": 50,
          "borderWidth": 1,
          "height": 60,
          "justifyContent": "center",
          "marginRight": 20,
          "opacity": 1,
          "width": 60,
        }
      }
      testID="BottomRightButton"
    >
      <Text
        allowFontScaling={false}
        style={
          Array [
            Object {
              "color": undefined,
              "fontSize": 20,
            },
            undefined,
            Object {
              "fontFamily": "anticon",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
    </View>
  </View>,
]
`;

exports[`[Page] Home should show error 2`] = `null`;
